# This is a GitHub actions workflow for NCEPLIBS-g2.
#
# This builds the develop branch with documentation, warning check,
# and address sanitizer.
#
# Ed Hartnett, 12/22/22
name: developer
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

jobs:
  developer:
    runs-on: ubuntu-latest
    env:
      FC: gfortran
      CC: gcc

    steps:

    - name: install-dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libpng-dev zlib1g-dev libjpeg-dev libaec-dev doxygen gcovr valgrind

    - name: "Build dependencies"
      uses: NOAA-EMC/ci-build-nceplibs@develop
      with:
        bacio-version: develop
        w3emc-version: develop
        jasper-version: version-4.0.0
        w3emc-cmake-args: -DBUILD_WITH_BUFR=OFF
        ip-version: develop
        g2c-version: develop
        g2c-cmake-args: -DBUILD_G2C=ON -DUSE_AEC=ON

    - name: checkout
      uses: actions/checkout@v4
      with:
        path: g2

    - name: cache-data
      id: cache-data
      uses: actions/cache@v4
      with:
        path: ~/data
        key: data-developer-5

    - name: asan
      run: |
        set -x
        cd g2
        mkdir build
        doxygen --version
        cd build
        cmake -DBUILD_UTILS=ON -DG2C_COMPARE=ON -DUSE_AEC=ON -DFTP_LARGE_TEST_FILES=ON -DENABLE_DOCS=ON -DCMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/nceplibs/jasper;$GITHUB_WORKSPACE/nceplibs/NCEPLIBS-bacio;$GITHUB_WORKSPACE/nceplibs/NCEPLIBS-w3emc;$GITHUB_WORKSPACE/nceplibs/NCEPLIBS-ip;$GITHUB_WORKSPACE/nceplibs/NCEPLIBS-g2c" -DCMAKE_Fortran_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall -fno-omit-frame-pointer -fsanitize=address" -DCMAKE_C_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall -fno-omit-frame-pointer -fsanitize=address" -DFTP_TEST_FILES=ON -DTEST_FILE_DIR=/home/runner/data -DCMAKE_BUILD_TYPE=Debug ..
        make -j2 VERBOSE=1

    - name: test_asan
      run: |
        cd $GITHUB_WORKSPACE/g2/build
        ctest --verbose --output-on-failure --rerun-failed
        gcovr --root .. -v  --html-details --exclude ../tests --exclude CMakeFiles --print-summary -o test-coverage.html &> /dev/null

    - name: cache-data
      if: steps.cache-data.outputs.cache-hit != 'true'
      run: |
        mkdir ~/data
        cp $GITHUB_WORKSPACE/g2/build/tests/data/* ~/data

    - name: upload-test-coverage
      uses: actions/upload-artifact@v4
      with:
        name: g2-test-coverage
        path: |
          g2/build/*.html
          g2/build/*.css
